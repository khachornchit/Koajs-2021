{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD\",\"filename\":\"/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD/app.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-private-property-in-object\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"BinaryExpression\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-private-methods\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{\"loose\":\"#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error\"}},{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":true,\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.15.5": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD",
      "filename": "/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD/app.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-private-property-in-object",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "BinaryExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-private-methods",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": "#__internal__@babel/preset-env__prefer-false-but-true-is-ok-if-it-prevents-an-error"
          }
        },
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": true,
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD/app.js",
        "plugins": [
          "privateIn",
          "classProperties",
          "classPrivateProperties",
          "classPrivateMethods",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD/",
        "sourceFileName": "app.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _koa = _interopRequireDefault(require(\"koa\"));\n\nvar _koaRouter = _interopRequireDefault(require(\"koa-router\"));\n\nvar _koaBodyparser = _interopRequireDefault(require(\"koa-bodyparser\"));\n\nrequire(\"@babel/polyfill\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar credential = {\n  name: 'admin',\n  pass: 'Test123!'\n};\n\nvar mongoose = require('koa-mongoose');\n\nvar port = 3670;\nvar app = new _koa[\"default\"]();\nvar router = new _koaRouter[\"default\"](); // Use as middleware\n\napp.use((0, _koaBodyparser[\"default\"])()); // app.use(mongoose({\n//     uri: 'mongodb://administrator:changeme@127.0.0.1:27017/test'\n// }))\n\nvar init = [{\n  id: 1,\n  name: \"John\"\n}, {\n  id: 2,\n  name: \"Lisa S.\"\n}];\nvar data = init;\nrouter.get('/', home);\nrouter.get('/list', list);\nrouter.post('/add', add);\nrouter.put('/update', update);\nrouter[\"delete\"]('/reset', reset);\nrouter.get('/test_mongo', testMongo);\n\nfunction home(_x) {\n  return _home.apply(this, arguments);\n}\n\nfunction _home() {\n  _home = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(ctx) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx.body = \"Welcome to Koa\";\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _home.apply(this, arguments);\n}\n\nfunction list(_x2) {\n  return _list.apply(this, arguments);\n}\n\nfunction _list() {\n  _list = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(ctx) {\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            ctx.body = data;\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _list.apply(this, arguments);\n}\n\nfunction add(_x3) {\n  return _add.apply(this, arguments);\n}\n\nfunction _add() {\n  _add = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(ctx) {\n    var input;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            input = ctx.request.body;\n            data.push(input);\n            ctx.body = data;\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _add.apply(this, arguments);\n}\n\nfunction update(_x4) {\n  return _update.apply(this, arguments);\n}\n\nfunction _update() {\n  _update = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(ctx) {\n    var input, index;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            input = ctx.request.body;\n            index = data.findIndex(function (e) {\n              return e.id === input.id;\n            });\n\n            if (index === -1) {\n              data.push(input);\n            } else {\n              data[index] = input;\n            }\n\n            ctx.body = data;\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _update.apply(this, arguments);\n}\n\nfunction reset(_x5) {\n  return _reset.apply(this, arguments);\n}\n\nfunction _reset() {\n  _reset = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(ctx) {\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            data = init;\n            ctx.body = data;\n\n          case 2:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _reset.apply(this, arguments);\n}\n\nfunction testMongo(_x6) {\n  return _testMongo.apply(this, arguments);\n}\n\nfunction _testMongo() {\n  _testMongo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(ctx) {\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            // const result = await ctx.db.collection('users').insert({name: 'haha'})\n            // const userId = result.ops[0]._id.toString()\n            // ctx.body = await ctx.db.collection('users').find().toArray()\n            // ctx.db.collection('users').remove({\n            //     _id: mongo.ObjectId(userId)\n            // })\n            ctx.body = 'hello2';\n\n          case 1:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _testMongo.apply(this, arguments);\n}\n\napp.use(router.routes()).use(router.allowedMethods());\napp.listen(port, function () {\n  console.log('App is running');\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJjcmVkZW50aWFsIiwibmFtZSIsInBhc3MiLCJtb25nb29zZSIsInJlcXVpcmUiLCJwb3J0IiwiYXBwIiwiS29hIiwicm91dGVyIiwiS29hUm91dGVyIiwidXNlIiwiaW5pdCIsImlkIiwiZGF0YSIsImdldCIsImhvbWUiLCJsaXN0IiwicG9zdCIsImFkZCIsInB1dCIsInVwZGF0ZSIsInJlc2V0IiwidGVzdE1vbmdvIiwiY3R4IiwiYm9keSIsImlucHV0IiwicmVxdWVzdCIsInB1c2giLCJpbmRleCIsImZpbmRJbmRleCIsImUiLCJyb3V0ZXMiLCJhbGxvd2VkTWV0aG9kcyIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBSkEsSUFBSUEsVUFBVSxHQUFHO0FBQUNDLEVBQUFBLElBQUksRUFBRSxPQUFQO0FBQWdCQyxFQUFBQSxJQUFJLEVBQUU7QUFBdEIsQ0FBakI7O0FBS0EsSUFBTUMsUUFBUSxHQUFHQyxPQUFPLENBQUMsY0FBRCxDQUF4Qjs7QUFFQSxJQUFNQyxJQUFJLEdBQUcsSUFBYjtBQUNBLElBQU1DLEdBQUcsR0FBRyxJQUFJQyxlQUFKLEVBQVo7QUFDQSxJQUFNQyxNQUFNLEdBQUcsSUFBSUMscUJBQUosRUFBZixDLENBRUE7O0FBQ0FILEdBQUcsQ0FBQ0ksR0FBSixDQUFRLGdDQUFSLEUsQ0FFQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSUMsSUFBSSxHQUFHLENBQ1A7QUFBQ0MsRUFBQUEsRUFBRSxFQUFFLENBQUw7QUFBUVgsRUFBQUEsSUFBSSxFQUFFO0FBQWQsQ0FETyxFQUVQO0FBQUNXLEVBQUFBLEVBQUUsRUFBRSxDQUFMO0FBQVFYLEVBQUFBLElBQUksRUFBRTtBQUFkLENBRk8sQ0FBWDtBQUtBLElBQUlZLElBQUksR0FBR0YsSUFBWDtBQUVBSCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQjtBQUNBUCxNQUFNLENBQUNNLEdBQVAsQ0FBVyxPQUFYLEVBQW9CRSxJQUFwQjtBQUNBUixNQUFNLENBQUNTLElBQVAsQ0FBWSxNQUFaLEVBQW9CQyxHQUFwQjtBQUNBVixNQUFNLENBQUNXLEdBQVAsQ0FBVyxTQUFYLEVBQXNCQyxNQUF0QjtBQUNBWixNQUFNLFVBQU4sQ0FBYyxRQUFkLEVBQXdCYSxLQUF4QjtBQUNBYixNQUFNLENBQUNNLEdBQVAsQ0FBVyxhQUFYLEVBQTBCUSxTQUExQjs7U0FFZVAsSTs7Ozs7a0VBQWYsaUJBQW9CUSxHQUFwQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0lBLFlBQUFBLEdBQUcsQ0FBQ0MsSUFBSjs7QUFESjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O1NBSWVSLEk7Ozs7O2tFQUFmLGtCQUFvQk8sR0FBcEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNJQSxZQUFBQSxHQUFHLENBQUNDLElBQUosR0FBV1gsSUFBWDs7QUFESjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O1NBSWVLLEc7Ozs7O2lFQUFmLGtCQUFtQkssR0FBbkI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1FFLFlBQUFBLEtBRFIsR0FDZ0JGLEdBQUcsQ0FBQ0csT0FBSixDQUFZRixJQUQ1QjtBQUVJWCxZQUFBQSxJQUFJLENBQUNjLElBQUwsQ0FBVUYsS0FBVjtBQUNBRixZQUFBQSxHQUFHLENBQUNDLElBQUosR0FBV1gsSUFBWDs7QUFISjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O1NBTWVPLE07Ozs7O29FQUFmLGtCQUFzQkcsR0FBdEI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ1FFLFlBQUFBLEtBRFIsR0FDZ0JGLEdBQUcsQ0FBQ0csT0FBSixDQUFZRixJQUQ1QjtBQUVVSSxZQUFBQSxLQUZWLEdBRWtCZixJQUFJLENBQUNnQixTQUFMLENBQWUsVUFBQUMsQ0FBQztBQUFBLHFCQUFJQSxDQUFDLENBQUNsQixFQUFGLEtBQVNhLEtBQUssQ0FBQ2IsRUFBbkI7QUFBQSxhQUFoQixDQUZsQjs7QUFJSSxnQkFBSWdCLEtBQUssS0FBSyxDQUFDLENBQWYsRUFBa0I7QUFDZGYsY0FBQUEsSUFBSSxDQUFDYyxJQUFMLENBQVVGLEtBQVY7QUFDSCxhQUZELE1BRU87QUFDSFosY0FBQUEsSUFBSSxDQUFDZSxLQUFELENBQUosR0FBY0gsS0FBZDtBQUNIOztBQUVERixZQUFBQSxHQUFHLENBQUNDLElBQUosR0FBV1gsSUFBWDs7QUFWSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O1NBYWVRLEs7Ozs7O21FQUFmLGtCQUFxQkUsR0FBckI7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNJVixZQUFBQSxJQUFJLEdBQUdGLElBQVA7QUFDQVksWUFBQUEsR0FBRyxDQUFDQyxJQUFKLEdBQVdYLElBQVg7O0FBRko7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztTQUtlUyxTOzs7Ozt1RUFBZixrQkFBeUJDLEdBQXpCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQUEsWUFBQUEsR0FBRyxDQUFDQyxJQUFKLEdBQVcsUUFBWDs7QUFQSjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHOzs7O0FBVUFsQixHQUFHLENBQUNJLEdBQUosQ0FBUUYsTUFBTSxDQUFDdUIsTUFBUCxFQUFSLEVBQXlCckIsR0FBekIsQ0FBNkJGLE1BQU0sQ0FBQ3dCLGNBQVAsRUFBN0I7QUFDQTFCLEdBQUcsQ0FBQzJCLE1BQUosQ0FBVzVCLElBQVgsRUFBaUIsWUFBTTtBQUNuQjZCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFaO0FBQ0gsQ0FGRCIsInNvdXJjZVJvb3QiOiIvVXNlcnMva2hhY2hvcm5jaGl0c29uZ3NhZW4vUHJvamVjdHMvRnVsbFN0YWNrL2tvYWpzLTIwMjEvQ1JVRC8iLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgY3JlZGVudGlhbCA9IHtuYW1lOiAnYWRtaW4nLCBwYXNzOiAnVGVzdDEyMyEnfVxuaW1wb3J0IEtvYSBmcm9tICdrb2EnXG5pbXBvcnQgS29hUm91dGVyIGZyb20gJ2tvYS1yb3V0ZXInXG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdrb2EtYm9keXBhcnNlcidcbmltcG9ydCAnQGJhYmVsL3BvbHlmaWxsJ1xuY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdrb2EtbW9uZ29vc2UnKVxuXG5jb25zdCBwb3J0ID0gMzY3MFxuY29uc3QgYXBwID0gbmV3IEtvYSgpXG5jb25zdCByb3V0ZXIgPSBuZXcgS29hUm91dGVyKClcblxuLy8gVXNlIGFzIG1pZGRsZXdhcmVcbmFwcC51c2UoYm9keVBhcnNlcigpKVxuXG4vLyBhcHAudXNlKG1vbmdvb3NlKHtcbi8vICAgICB1cmk6ICdtb25nb2RiOi8vYWRtaW5pc3RyYXRvcjpjaGFuZ2VtZUAxMjcuMC4wLjE6MjcwMTcvdGVzdCdcbi8vIH0pKVxuXG5sZXQgaW5pdCA9IFtcbiAgICB7aWQ6IDEsIG5hbWU6IFwiSm9oblwifSxcbiAgICB7aWQ6IDIsIG5hbWU6IFwiTGlzYSBTLlwifVxuXVxuXG5sZXQgZGF0YSA9IGluaXRcblxucm91dGVyLmdldCgnLycsIGhvbWUpXG5yb3V0ZXIuZ2V0KCcvbGlzdCcsIGxpc3QpXG5yb3V0ZXIucG9zdCgnL2FkZCcsIGFkZClcbnJvdXRlci5wdXQoJy91cGRhdGUnLCB1cGRhdGUpXG5yb3V0ZXIuZGVsZXRlKCcvcmVzZXQnLCByZXNldClcbnJvdXRlci5nZXQoJy90ZXN0X21vbmdvJywgdGVzdE1vbmdvKVxuXG5hc3luYyBmdW5jdGlvbiBob21lKGN0eCkge1xuICAgIGN0eC5ib2R5ID0gYFdlbGNvbWUgdG8gS29hYFxufVxuXG5hc3luYyBmdW5jdGlvbiBsaXN0KGN0eCkge1xuICAgIGN0eC5ib2R5ID0gZGF0YVxufVxuXG5hc3luYyBmdW5jdGlvbiBhZGQoY3R4KSB7XG4gICAgbGV0IGlucHV0ID0gY3R4LnJlcXVlc3QuYm9keVxuICAgIGRhdGEucHVzaChpbnB1dClcbiAgICBjdHguYm9keSA9IGRhdGFcbn1cblxuYXN5bmMgZnVuY3Rpb24gdXBkYXRlKGN0eCkge1xuICAgIGxldCBpbnB1dCA9IGN0eC5yZXF1ZXN0LmJvZHlcbiAgICBjb25zdCBpbmRleCA9IGRhdGEuZmluZEluZGV4KGUgPT4gZS5pZCA9PT0gaW5wdXQuaWQpXG5cbiAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgIGRhdGEucHVzaChpbnB1dClcbiAgICB9IGVsc2Uge1xuICAgICAgICBkYXRhW2luZGV4XSA9IGlucHV0XG4gICAgfVxuXG4gICAgY3R4LmJvZHkgPSBkYXRhXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHJlc2V0KGN0eCkge1xuICAgIGRhdGEgPSBpbml0XG4gICAgY3R4LmJvZHkgPSBkYXRhXG59XG5cbmFzeW5jIGZ1bmN0aW9uIHRlc3RNb25nbyhjdHgpIHtcbiAgICAvLyBjb25zdCByZXN1bHQgPSBhd2FpdCBjdHguZGIuY29sbGVjdGlvbigndXNlcnMnKS5pbnNlcnQoe25hbWU6ICdoYWhhJ30pXG4gICAgLy8gY29uc3QgdXNlcklkID0gcmVzdWx0Lm9wc1swXS5faWQudG9TdHJpbmcoKVxuICAgIC8vIGN0eC5ib2R5ID0gYXdhaXQgY3R4LmRiLmNvbGxlY3Rpb24oJ3VzZXJzJykuZmluZCgpLnRvQXJyYXkoKVxuICAgIC8vIGN0eC5kYi5jb2xsZWN0aW9uKCd1c2VycycpLnJlbW92ZSh7XG4gICAgLy8gICAgIF9pZDogbW9uZ28uT2JqZWN0SWQodXNlcklkKVxuICAgIC8vIH0pXG4gICAgY3R4LmJvZHkgPSAnaGVsbG8yJ1xufVxuXG5hcHAudXNlKHJvdXRlci5yb3V0ZXMoKSkudXNlKHJvdXRlci5hbGxvd2VkTWV0aG9kcygpKVxuYXBwLmxpc3Rlbihwb3J0LCAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ0FwcCBpcyBydW5uaW5nJylcbn0pXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "credential",
        "name",
        "pass",
        "mongoose",
        "require",
        "port",
        "app",
        "Koa",
        "router",
        "KoaRouter",
        "use",
        "init",
        "id",
        "data",
        "get",
        "home",
        "list",
        "post",
        "add",
        "put",
        "update",
        "reset",
        "testMongo",
        "ctx",
        "body",
        "input",
        "request",
        "push",
        "index",
        "findIndex",
        "e",
        "routes",
        "allowedMethods",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AACA;;AACA;;AACA;;AACA;;;;;;;;AAJA,IAAIA,UAAU,GAAG;AAACC,EAAAA,IAAI,EAAE,OAAP;AAAgBC,EAAAA,IAAI,EAAE;AAAtB,CAAjB;;AAKA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAxB;;AAEA,IAAMC,IAAI,GAAG,IAAb;AACA,IAAMC,GAAG,GAAG,IAAIC,eAAJ,EAAZ;AACA,IAAMC,MAAM,GAAG,IAAIC,qBAAJ,EAAf,C,CAEA;;AACAH,GAAG,CAACI,GAAJ,CAAQ,gCAAR,E,CAEA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAG,CACP;AAACC,EAAAA,EAAE,EAAE,CAAL;AAAQX,EAAAA,IAAI,EAAE;AAAd,CADO,EAEP;AAACW,EAAAA,EAAE,EAAE,CAAL;AAAQX,EAAAA,IAAI,EAAE;AAAd,CAFO,CAAX;AAKA,IAAIY,IAAI,GAAGF,IAAX;AAEAH,MAAM,CAACM,GAAP,CAAW,GAAX,EAAgBC,IAAhB;AACAP,MAAM,CAACM,GAAP,CAAW,OAAX,EAAoBE,IAApB;AACAR,MAAM,CAACS,IAAP,CAAY,MAAZ,EAAoBC,GAApB;AACAV,MAAM,CAACW,GAAP,CAAW,SAAX,EAAsBC,MAAtB;AACAZ,MAAM,UAAN,CAAc,QAAd,EAAwBa,KAAxB;AACAb,MAAM,CAACM,GAAP,CAAW,aAAX,EAA0BQ,SAA1B;;SAEeP,I;;;;;kEAAf,iBAAoBQ,GAApB;AAAA;AAAA;AAAA;AAAA;AACIA,YAAAA,GAAG,CAACC,IAAJ;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAIeR,I;;;;;kEAAf,kBAAoBO,GAApB;AAAA;AAAA;AAAA;AAAA;AACIA,YAAAA,GAAG,CAACC,IAAJ,GAAWX,IAAX;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAIeK,G;;;;;iEAAf,kBAAmBK,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQE,YAAAA,KADR,GACgBF,GAAG,CAACG,OAAJ,CAAYF,IAD5B;AAEIX,YAAAA,IAAI,CAACc,IAAL,CAAUF,KAAV;AACAF,YAAAA,GAAG,CAACC,IAAJ,GAAWX,IAAX;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAMeO,M;;;;;oEAAf,kBAAsBG,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AACQE,YAAAA,KADR,GACgBF,GAAG,CAACG,OAAJ,CAAYF,IAD5B;AAEUI,YAAAA,KAFV,GAEkBf,IAAI,CAACgB,SAAL,CAAe,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAClB,EAAF,KAASa,KAAK,CAACb,EAAnB;AAAA,aAAhB,CAFlB;;AAII,gBAAIgB,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdf,cAAAA,IAAI,CAACc,IAAL,CAAUF,KAAV;AACH,aAFD,MAEO;AACHZ,cAAAA,IAAI,CAACe,KAAD,CAAJ,GAAcH,KAAd;AACH;;AAEDF,YAAAA,GAAG,CAACC,IAAJ,GAAWX,IAAX;;AAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAaeQ,K;;;;;mEAAf,kBAAqBE,GAArB;AAAA;AAAA;AAAA;AAAA;AACIV,YAAAA,IAAI,GAAGF,IAAP;AACAY,YAAAA,GAAG,CAACC,IAAJ,GAAWX,IAAX;;AAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAKeS,S;;;;;uEAAf,kBAAyBC,GAAzB;AAAA;AAAA;AAAA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACAA,YAAAA,GAAG,CAACC,IAAJ,GAAW,QAAX;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAUAlB,GAAG,CAACI,GAAJ,CAAQF,MAAM,CAACuB,MAAP,EAAR,EAAyBrB,GAAzB,CAA6BF,MAAM,CAACwB,cAAP,EAA7B;AACA1B,GAAG,CAAC2B,MAAJ,CAAW5B,IAAX,EAAiB,YAAM;AACnB6B,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,CAFD",
      "sourceRoot": "/Users/khachornchitsongsaen/Projects/FullStack/koajs-2021/CRUD/",
      "sourcesContent": [
        "let credential = {name: 'admin', pass: 'Test123!'}\nimport Koa from 'koa'\nimport KoaRouter from 'koa-router'\nimport bodyParser from 'koa-bodyparser'\nimport '@babel/polyfill'\nconst mongoose = require('koa-mongoose')\n\nconst port = 3670\nconst app = new Koa()\nconst router = new KoaRouter()\n\n// Use as middleware\napp.use(bodyParser())\n\n// app.use(mongoose({\n//     uri: 'mongodb://administrator:changeme@127.0.0.1:27017/test'\n// }))\n\nlet init = [\n    {id: 1, name: \"John\"},\n    {id: 2, name: \"Lisa S.\"}\n]\n\nlet data = init\n\nrouter.get('/', home)\nrouter.get('/list', list)\nrouter.post('/add', add)\nrouter.put('/update', update)\nrouter.delete('/reset', reset)\nrouter.get('/test_mongo', testMongo)\n\nasync function home(ctx) {\n    ctx.body = `Welcome to Koa`\n}\n\nasync function list(ctx) {\n    ctx.body = data\n}\n\nasync function add(ctx) {\n    let input = ctx.request.body\n    data.push(input)\n    ctx.body = data\n}\n\nasync function update(ctx) {\n    let input = ctx.request.body\n    const index = data.findIndex(e => e.id === input.id)\n\n    if (index === -1) {\n        data.push(input)\n    } else {\n        data[index] = input\n    }\n\n    ctx.body = data\n}\n\nasync function reset(ctx) {\n    data = init\n    ctx.body = data\n}\n\nasync function testMongo(ctx) {\n    // const result = await ctx.db.collection('users').insert({name: 'haha'})\n    // const userId = result.ops[0]._id.toString()\n    // ctx.body = await ctx.db.collection('users').find().toArray()\n    // ctx.db.collection('users').remove({\n    //     _id: mongo.ObjectId(userId)\n    // })\n    ctx.body = 'hello2'\n}\n\napp.use(router.routes()).use(router.allowedMethods())\napp.listen(port, () => {\n    console.log('App is running')\n})\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1633103372588
  }
}